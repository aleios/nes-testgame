MEMORY {
    ZP:     file = "", start = $0000, size = $0100, type = rw, define = yes;   # Zero Page
    HEADER: file = %O, start = $0000, size = $0010, type = ro, fill = yes, fillval = $00; # Header 16 bytes

    ROM:  file = %O, start = $8000, size = $7FFA, type = ro, fill = yes, fillval = $00; # PRG-ROM 32KB
    ROMV: file = %O, start = $FFFA, size = $0006, type = ro, fill = yes, fillval = $00; # Vectors
    CHRROM: file = %O, start = $0000, size = $2000, type = ro, fill = yes, fillval = $FF; # 8KB Character ROM

    RAM:    file = "", start = $0300, size = $0500, type = rw, define = yes;  # 2KB Internal RAM
    OAM:    file = "", start = $0200, size = $0100, type = rw; # Shadow OAM
}

SEGMENTS {
    ZEROPAGE: load = ZP, type = zp;
    HEADER: load = HEADER, type = ro, optional = yes; # Header
    VECTORS: load = ROMV, type = ro, define = yes; # Vectors
    STARTUP: load = ROM, type = ro; # Startup segment. Not totally necessary.

    CODE: load = ROM, type = ro, define = yes; # PRG-ROM code
    RODATA: load = ROM, type = ro, define = yes; # PRG-ROM data
    
    BSS: load = RAM, type = bss, define = yes; # Uninit RAM data


    OAMDATA: load = OAM, type = rw, optional = yes; # Shadow OAM data
    CHR: load = CHRROM, type = ro; # CHR-ROM
}